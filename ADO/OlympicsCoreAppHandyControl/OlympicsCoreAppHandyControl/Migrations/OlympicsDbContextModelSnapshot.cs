// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicsCoreAppHandyControl;

#nullable disable

namespace OlympicsCoreAppHandyControl.Migrations
{
    [DbContext(typeof(OlympicsDbContext))]
    partial class OlympicsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Olympiad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSummer")
                        .HasColumnType("bit");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Olympiads");
                });

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("SportId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OlympiadId")
                        .HasColumnType("int");

                    b.Property<int?>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<int>("Participantd")
                        .HasColumnType("int");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<int?>("SportId")
                        .HasColumnType("int");

                    b.Property<int>("Sporttd")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OlympiadId");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("SportId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Olympiad", b =>
                {
                    b.HasOne("OlympicsCoreAppHandyControl.Models.Country", "Country")
                        .WithMany("Olympiads")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Participant", b =>
                {
                    b.HasOne("OlympicsCoreAppHandyControl.Models.Country", "Country")
                        .WithMany("Participants")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlympicsCoreAppHandyControl.Models.Sport", "Sport")
                        .WithMany("Participants")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Result", b =>
                {
                    b.HasOne("OlympicsCoreAppHandyControl.Models.Olympiad", "Olympiad")
                        .WithMany("Results")
                        .HasForeignKey("OlympiadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlympicsCoreAppHandyControl.Models.Participant", "Participant")
                        .WithMany("Results")
                        .HasForeignKey("ParticipantId");

                    b.HasOne("OlympicsCoreAppHandyControl.Models.Sport", "Sport")
                        .WithMany("Results")
                        .HasForeignKey("SportId");

                    b.Navigation("Olympiad");

                    b.Navigation("Participant");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Country", b =>
                {
                    b.Navigation("Olympiads");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Olympiad", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Participant", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("OlympicsCoreAppHandyControl.Models.Sport", b =>
                {
                    b.Navigation("Participants");

                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
